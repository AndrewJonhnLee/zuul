server.port = 8551
spring.profiles.active=dev

ribbon.httpclient.enabled=false
ribbon.okhttp.enabled=true
zuul.ribbon.eager-load.enabled=true
#在ribbon中禁用eureka
#ribbon.eureka.enabled=false

zuul.routes.order1.path = /order1/**
zuul.routes.order1.serviceId = SERVICE-ORDER1
zuul.routes.order1.sensitiveHeaders =Cookie,Set-Cookie

zuul.routes.report.path = /report/**
zuul.routes.report.serviceId = SERVICE-ORDERREPORT
zuul.routes.report.sensitiveHeaders =Cookie,Set-Cookie


zuul.routes.user.path = /user/**
zuul.routes.user.serviceId = SERVICE-USERCENTER
zuul.routes.user.sensitiveHeaders =Cookie,Set-Cookie


zuul.routes.agent.path = /agent/**
zuul.routes.agent.serviceId = SERVICE-AGENT
zuul.routes.agent.sensitiveHeaders =Cookie,Set-Cookie


zuul.routes.order.path = /order/**
zuul.routes.order.serviceId = SERVICE-ORDER
#zuul.routes.api-a.url = forward:/abc
#不包括列出的头信息
zuul.routes.order.sensitiveHeaders =Cookie,Set-Cookie

zuul.routes.api-b.path = /api-b/**
zuul.routes.api-b.serviceId = service-b
zuul.routes.api-b.sensitiveHeaders =Cookie,Set-Cookie,Authorization

zuul.routes.gate.path = /gate/**
zuul.routes.gate.serviceId = service_zuul
zuul.routes.gate.sensitiveHeaders =Cookie,Set-Cookie
zuul.routes.gate.stripPrefix=true


zuul.routes.auth.path = /auth/**
zuul.routes.auth.serviceId = service_auth
zuul.routes.auth.sensitiveHeaders =

#zuul.set-content-length=true
#是否开启重试
zuul.retryable=true
#重试次数
ribbon.MaxAutoRetries=2
#切换相同服务器次数
ribbon.MaxAutoRetriesNextServer=0
#zuul.ignoreSecurityHeaders=true

#这种配配置还是会忽略请求的前缀,如http://localhost:8085/api-a/add 会转发到最终的http://localhost:8080/add
#这一点需要注意.
#如果我们不希望前缀被取消掉,需要在后面追加 stripPrefix: false
#当stripPrefix=true的时候 （http://127.0.0.1:8181/api/user/list -> http://192.168.1.100:8080/user/list）
#当stripPrefix=false的时候（http://127.0.0.1:8181/api/user/list -> http://192.168.1.100:8080/api/user/list）



spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=1234qwer
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0