server.port = 8551
spring.profiles.active=test

ribbon.httpclient.enabled=false
ribbon.okhttp.enabled=true
zuul.ribbon.eager-load.enabled=true
#在ribbon中禁用eureka
#ribbon.eureka.enabled=false
#修改路径,默认为zuul
#zuul.servletPath
#上传文件,oss为服务路径
#localhost:5000/zuul/oss/file/upload
#忽略SERVICE_AUTH,会自动配置,例如 [/service-orderreport/**]
zuul.ignored-services=*

zuul.routes.order1.path = /order1/**
zuul.routes.order1.serviceId = SERVICE-ORDER1
zuul.routes.order1.sensitiveHeaders =Cookie,Set-Cookie

zuul.routes.report.path = /report/**
zuul.routes.report.serviceId = SERVICE-ORDERREPORT
zuul.routes.report.sensitiveHeaders =Cookie,Set-Cookie


zuul.routes.center.path = /center/**
zuul.routes.center.serviceId = SERVICE-USERCENTER
zuul.routes.center.sensitiveHeaders =Cookie,Set-Cookie

zuul.routes.center02.path = /center02/**
zuul.routes.center02.serviceId = SERVICE-USERCENTER02
zuul.routes.center02.sensitiveHeaders =Cookie,Set-Cookie


zuul.routes.agent.path = /agent/**
zuul.routes.agent.serviceId = SERVICE-AGENT
zuul.routes.agent.sensitiveHeaders =Cookie,Set-Cookie

zuul.routes.setting.path = /setting/**
zuul.routes.setting.serviceId = SERVICE-SETTING
zuul.routes.setting.sensitiveHeaders =Cookie,Set-Cookie


zuul.routes.order.path = /order/**
zuul.routes.order.serviceId = SERVICE-ORDER
#zuul.routes.api-a.url = forward:/abc
#不包括列出的头信息
zuul.routes.order.sensitiveHeaders =Cookie,Set-Cookie

zuul.routes.gate.path = /gate/**
zuul.routes.gate.serviceId = service_zuul
zuul.routes.gate.sensitiveHeaders =Cookie,Set-Cookie
zuul.routes.gate.stripPrefix=true

#
#zuul.routes.auth.path = /auth/**
#zuul.routes.auth.serviceId = service_auth
#zuul.routes.auth.sensitiveHeaders =

#zuul.set-content-length=true
#是否开启重试

zuul.retryable=true
#重试次数
#Max number of retries on the same server (excluding the first try)
ribbon.MaxAutoRetries=2
#切换相同服务器次数
#Max number of next servers to retry (excluding the first server)
#ribbon.MaxAutoRetriesNextServer=0
#zuul.ignoreSecurityHeaders=true

#这种配配置还是会忽略请求的前缀,如http://localhost:8085/api-a/add 会转发到最终的http://localhost:8080/add
#这一点需要注意.
#如果我们不希望前缀被取消掉,需要在后面追加 stripPrefix: false
#当stripPrefix=true的时候 （http://127.0.0.1:8181/api/user/list -> http://192.168.1.100:8080/user/list）
#当stripPrefix=false的时候（http://127.0.0.1:8181/api/user/list -> http://192.168.1.100:8080/api/user/list）


hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=180000
#hystrix.command.default.execution.timeout.enabled = true
#对okhttp无效
ribbon.ConnectTimeout=60000
ribbon.ReadTimeout=60000
#ribbon.MaxTotalConnections


#zuul并发设置
zuul.host.maxTotalConnections: 200
zuul.host.maxPerRouteConnections: 10
#zuul.semaphore.max-semaphores: 128
# 建议使用这种方式来设置，可以给每个不同的后端微服务设置不同的信号量
#zuul.eureka.[service id].semaphore.maxSemaphores: 128




spring.redis.database=0
# Redis服务器地址
spring.redis.host=127.0.0.1
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=1234qwer
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=-1
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=0


#Disable Zuul Filters
#关闭 org.springframework.cloud.netflix.zuul.filters.post.SendResponseFilter , 可设置zuul.SendResponseFilter.post.disable=true.


#zuul.max.host.connections = 500
#zuul.host.socket-timeout-millis = 60000
#zuul.host.connect-timeout-millis = 60000
